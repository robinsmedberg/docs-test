{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Agronod \u00b6 Agronod \u00e4r ett ekosystem med tj\u00e4nster f\u00f6r att st\u00f6dja svenskt lantbruk","title":"Home"},{"location":"#agronod","text":"Agronod \u00e4r ett ekosystem med tj\u00e4nster f\u00f6r att st\u00f6dja svenskt lantbruk","title":"Agronod"},{"location":"architecture/agrosphere/","text":"Agrosf\u00e4r \u00b6 Repository","title":"Agrosf\u00e4r"},{"location":"architecture/agrosphere/#agrosfar","text":"Repository","title":"Agrosf\u00e4r"},{"location":"architecture/fence/","text":"Fullmaktsapplikation \u00b6 Repository","title":"Fullmaktsapplikation"},{"location":"architecture/fence/#fullmaktsapplikation","text":"Repository","title":"Fullmaktsapplikation"},{"location":"architecture/platform/","text":"Platform \u00b6","title":"Platform"},{"location":"architecture/platform/#platform","text":"","title":"Platform"},{"location":"architecture/system-context/","text":"System context \u00b6","title":"System context"},{"location":"architecture/system-context/#system-context","text":"","title":"System context"},{"location":"developer-guide/contributing/","text":"Contributing \u00b6 This documentation is created using markup pages and Mkdir. More specifically Material for Mkdir Repository can be found here The strucure of the documentation is determined in mkdocs.yml Create a pull request to contribute.","title":"Contributing"},{"location":"developer-guide/contributing/#contributing","text":"This documentation is created using markup pages and Mkdir. More specifically Material for Mkdir Repository can be found here The strucure of the documentation is determined in mkdocs.yml Create a pull request to contribute.","title":"Contributing"},{"location":"developer-guide/local-development/","text":"Local development workflow \u00b6 Using Tilt \u00b6 Install local kubernetes cluster Rancher Desktop or Docker Desktop and make sure to enable Kubernetes Install tilt Add Tilfile (only if not exists) Ensure Kubernets context is your local cluster # Rancher Desktop kubectl config use-context rancher-desktop # or Docker Desktop kubectl config use-context docker-desktop Start local cluster Run tilt Tilt up Running multiple applications / services \u00b6 Tilt up --port { port }","title":"Local development workflow"},{"location":"developer-guide/local-development/#local-development-workflow","text":"","title":"Local development workflow"},{"location":"developer-guide/local-development/#using-tilt","text":"Install local kubernetes cluster Rancher Desktop or Docker Desktop and make sure to enable Kubernetes Install tilt Add Tilfile (only if not exists) Ensure Kubernets context is your local cluster # Rancher Desktop kubectl config use-context rancher-desktop # or Docker Desktop kubectl config use-context docker-desktop Start local cluster Run tilt Tilt up","title":"Using Tilt"},{"location":"developer-guide/local-development/#running-multiple-applications-services","text":"Tilt up --port { port }","title":"Running multiple applications / services"},{"location":"developer-guide/visma/","text":"Visma \u00b6 We use Visma as a service provider of BankId Visma-konfigurationer \u00b6 F\u00f6ljande beh\u00f6ver konfigureras hos Visma. Detta g\u00e5r enbart att g\u00f6ra via mail. Agronods kontakt hos Visma \u00e4r christian.nilsson@visma.com (sales manager erling.sjostrom@visma.com ) Metadata V\u00e5r metadata finns p\u00e5 f\u00f6ljande l\u00e4nk (det r\u00e4cker med att maila \u00f6ver l\u00e4nken) https://YOUR_DOMAIN/samlp/metadata?connection=YOUR_CONNECTION_NAME Trusted sites Visma beh\u00f6ver \u00e4ven en lista p\u00e5 trusted sites som f\u00e5r anv\u00e4ndas f\u00f6r callbacks. Ex: https://signup.agronod.com Milj\u00f6er \u00b6 Visma erh\u00e5ller en test-milj\u00f6 och en produktions-milj\u00f6. F\u00f6r SAML beh\u00f6ver f\u00f6ljande matas in: Inst\u00e4llning Test Prod Sign-in URL https://idp-test.ciceron.cloud/authenticate.request?system=agronod https://idp.ciceron.cloud/authenticate.request?system=agronod X509 Signing Certificate L\u00e4nk till certifikat*: https://idp-test.ciceron.cloud/metadata?system=agronod&type=IdP L\u00e4nk till certifikat*: https://idp.ciceron.cloud/metadata?system=agronod&type=IdP Protocol Binding HTTP-POST HTTP-POST * Ett X509-certifikat beh\u00f6ver matas in (p\u00e5 l\u00e4nken ovan finns certifikatet som en base64-encoded string). F\u00f6r att g\u00f6ra om str\u00e4ngen till ett certifikat som g\u00e5r att ladda upp i Auth0: - Ladda ner f\u00f6ljande exempel-textfil . - Klistra in den base64-encoded str\u00e4ng som finns p\u00e5 ovanst\u00e5ende l\u00e4nk d\u00e4r det st\u00e5r - Spara filen som *.cer REST API \u00b6 F\u00f6r att anv\u00e4nda sig av Vismas REST API:er finns f\u00f6ljande dokumentation tillg\u00e4nglig: Visma TS-REST API.pdf Test bankId f\u00f6r utveckling \u00b6 Skaffa ett bankId f\u00f6r test: https://www.bankid.com/utvecklare/test/skaffa-testbankid/test-bankid-get Logga in med personlig bankId produktion Ladda ned bankId p\u00e5 fil och sedan installera Konfiguera och f\u00f6lj anvisningar: https://www.bankid.com/utvecklare/test/skaffa-testbankid/testbankid-konfiguration . Skapa en ny fil i BankId/Config som heter CavaServerSelector.txt och inneh\u00e5ller texten \"kundtest\". Gl\u00f6m inte att skapa en tom rad efter \"kundtest\" Aktivera","title":"Visma"},{"location":"developer-guide/visma/#visma","text":"We use Visma as a service provider of BankId","title":"Visma"},{"location":"developer-guide/visma/#visma-konfigurationer","text":"F\u00f6ljande beh\u00f6ver konfigureras hos Visma. Detta g\u00e5r enbart att g\u00f6ra via mail. Agronods kontakt hos Visma \u00e4r christian.nilsson@visma.com (sales manager erling.sjostrom@visma.com ) Metadata V\u00e5r metadata finns p\u00e5 f\u00f6ljande l\u00e4nk (det r\u00e4cker med att maila \u00f6ver l\u00e4nken) https://YOUR_DOMAIN/samlp/metadata?connection=YOUR_CONNECTION_NAME Trusted sites Visma beh\u00f6ver \u00e4ven en lista p\u00e5 trusted sites som f\u00e5r anv\u00e4ndas f\u00f6r callbacks. Ex: https://signup.agronod.com","title":"Visma-konfigurationer"},{"location":"developer-guide/visma/#miljoer","text":"Visma erh\u00e5ller en test-milj\u00f6 och en produktions-milj\u00f6. F\u00f6r SAML beh\u00f6ver f\u00f6ljande matas in: Inst\u00e4llning Test Prod Sign-in URL https://idp-test.ciceron.cloud/authenticate.request?system=agronod https://idp.ciceron.cloud/authenticate.request?system=agronod X509 Signing Certificate L\u00e4nk till certifikat*: https://idp-test.ciceron.cloud/metadata?system=agronod&type=IdP L\u00e4nk till certifikat*: https://idp.ciceron.cloud/metadata?system=agronod&type=IdP Protocol Binding HTTP-POST HTTP-POST * Ett X509-certifikat beh\u00f6ver matas in (p\u00e5 l\u00e4nken ovan finns certifikatet som en base64-encoded string). F\u00f6r att g\u00f6ra om str\u00e4ngen till ett certifikat som g\u00e5r att ladda upp i Auth0: - Ladda ner f\u00f6ljande exempel-textfil . - Klistra in den base64-encoded str\u00e4ng som finns p\u00e5 ovanst\u00e5ende l\u00e4nk d\u00e4r det st\u00e5r - Spara filen som *.cer","title":"Milj\u00f6er"},{"location":"developer-guide/visma/#rest-api","text":"F\u00f6r att anv\u00e4nda sig av Vismas REST API:er finns f\u00f6ljande dokumentation tillg\u00e4nglig: Visma TS-REST API.pdf","title":"REST API"},{"location":"developer-guide/visma/#test-bankid-for-utveckling","text":"Skaffa ett bankId f\u00f6r test: https://www.bankid.com/utvecklare/test/skaffa-testbankid/test-bankid-get Logga in med personlig bankId produktion Ladda ned bankId p\u00e5 fil och sedan installera Konfiguera och f\u00f6lj anvisningar: https://www.bankid.com/utvecklare/test/skaffa-testbankid/testbankid-konfiguration . Skapa en ny fil i BankId/Config som heter CavaServerSelector.txt och inneh\u00e5ller texten \"kundtest\". Gl\u00f6m inte att skapa en tom rad efter \"kundtest\" Aktivera","title":"Test bankId f\u00f6r utveckling"},{"location":"operator-manual/binero-openshift-setup/","text":"Setting up Openshift on Binero \u00b6 This guide describes how to install an Openshift cluster on Binero. Binero setup \u00b6 Create a Binero account Login to \"Publikt moln\" Create an API user Access & S\u00e4kerhet / API-anv\u00e4ndare / + Namn: agronod L\u00f6senord: {password} Open HORIZON Login using API user (ensure user name is the full name generated when creating user, like 5002488_agronod) Download Openstack rc-file HORIZON / Account Install openstack client #mac brew install openstackclient Create floating IPs #mac source { path to rc-file } openstack network list --long -c ID -c Name -c \"Router Type\" export EXTERNAL_NETWORK = <external_network_id> openstack floating ip create --description \"API {cluster name}.agronod.com\" $EXTERNAL_NETWORK openstack floating ip create --description \"Ingress {cluster name}.agronod.com\" $EXTERNAL_NETWORK Create security groups in HORIZON / Network / Security groups bin-ssh add rule 'ssh' DNS \u00b6 Add DNS records API type: A ttl: 300 subdomain: api.{domain name} data: {API floating-ip} Ingress type: A ttl: 300 subdomain: *.apps.{domain name} data: {Ingress floating-ip} Ensure DNS des not contain an \"*.agronod.com\" record Install Openshift \u00b6 Reference Openshift installation guide Clone repo https://github.com/agronod/openshift-install Download installer Datacenter/Red Hat Openstack -> Installer provisioned Move \"openshift-install\" into root of repo Download installation pull secret from redhat Generate SSH key #mac/linux ssh-keygen -t ed25519 -N '' -f ~/.ssh/ { cluster name } Download \"clouds.yaml\" from HORIZON / API Access / Download Openstack RC file into repo root folder Copy \"install-config.yaml\" into <installation directory> Update <installation directory> /install-config.yaml sshKey - cat ~/.ssh/{cluster name}.pub pullSecret - cat <path>/<pull_secret> ingressFloatingIP - from HORIZON / Network / Floating IPs apiFloatingIP - from HORIZON / Network / Floating IPs additionalSecurityGroupIDs - From HORIZON / Network / Security Groups Generate manifests ./openshift-install --dir <installation_directory> create manifests Update manifests Add to manifests/cloud-provider-config.yaml In section [LoadBalancer] lb-provider = \"amphora\" Create cluster ./openshift-install create cluster --dir <installation_directory> --log-level = debug","title":"Setting up Openshift on Binero"},{"location":"operator-manual/binero-openshift-setup/#setting-up-openshift-on-binero","text":"This guide describes how to install an Openshift cluster on Binero.","title":"Setting up Openshift on Binero"},{"location":"operator-manual/binero-openshift-setup/#binero-setup","text":"Create a Binero account Login to \"Publikt moln\" Create an API user Access & S\u00e4kerhet / API-anv\u00e4ndare / + Namn: agronod L\u00f6senord: {password} Open HORIZON Login using API user (ensure user name is the full name generated when creating user, like 5002488_agronod) Download Openstack rc-file HORIZON / Account Install openstack client #mac brew install openstackclient Create floating IPs #mac source { path to rc-file } openstack network list --long -c ID -c Name -c \"Router Type\" export EXTERNAL_NETWORK = <external_network_id> openstack floating ip create --description \"API {cluster name}.agronod.com\" $EXTERNAL_NETWORK openstack floating ip create --description \"Ingress {cluster name}.agronod.com\" $EXTERNAL_NETWORK Create security groups in HORIZON / Network / Security groups bin-ssh add rule 'ssh'","title":"Binero setup"},{"location":"operator-manual/binero-openshift-setup/#dns","text":"Add DNS records API type: A ttl: 300 subdomain: api.{domain name} data: {API floating-ip} Ingress type: A ttl: 300 subdomain: *.apps.{domain name} data: {Ingress floating-ip} Ensure DNS des not contain an \"*.agronod.com\" record","title":"DNS"},{"location":"operator-manual/binero-openshift-setup/#install-openshift","text":"Reference Openshift installation guide Clone repo https://github.com/agronod/openshift-install Download installer Datacenter/Red Hat Openstack -> Installer provisioned Move \"openshift-install\" into root of repo Download installation pull secret from redhat Generate SSH key #mac/linux ssh-keygen -t ed25519 -N '' -f ~/.ssh/ { cluster name } Download \"clouds.yaml\" from HORIZON / API Access / Download Openstack RC file into repo root folder Copy \"install-config.yaml\" into <installation directory> Update <installation directory> /install-config.yaml sshKey - cat ~/.ssh/{cluster name}.pub pullSecret - cat <path>/<pull_secret> ingressFloatingIP - from HORIZON / Network / Floating IPs apiFloatingIP - from HORIZON / Network / Floating IPs additionalSecurityGroupIDs - From HORIZON / Network / Security Groups Generate manifests ./openshift-install --dir <installation_directory> create manifests Update manifests Add to manifests/cloud-provider-config.yaml In section [LoadBalancer] lb-provider = \"amphora\" Create cluster ./openshift-install create cluster --dir <installation_directory> --log-level = debug","title":"Install Openshift"},{"location":"operator-manual/loopa-cert/","text":"Generate Loopia certificates \u00b6 Install certbot \u00b6 # mac brew install certbot Generate cert using Loopia plugin \u00b6 Original guide can be found here Install certbot loopia plugn \u00b6 sudo pip install certbot-dns-loopia Setup Loopia API user with permissions \u00b6 addZoneRecord getZoneRecords removeSubdomain removeZoneRecord Add credentials file \u00b6 dns_loopia_user = user@loopiaapi dns_loopia_password = passwordgoeshere Generate cert \u00b6 sudo certbot certonly \\ --authenticator dns-loopia \\ --dns-loopia-propagation-seconds 90 \\ --dns-loopia-credentials credentials.ini \\ -d '*.agronod.com' \\ -d '*.apps.dev-ocp.agronod.com' \\ -d 'api.dev-ocp.agronod.com' Upload cert to Loopia \u00b6 Find guide here","title":"Generate Loopia certificates"},{"location":"operator-manual/loopa-cert/#generate-loopia-certificates","text":"","title":"Generate Loopia certificates"},{"location":"operator-manual/loopa-cert/#install-certbot","text":"# mac brew install certbot","title":"Install certbot"},{"location":"operator-manual/loopa-cert/#generate-cert-using-loopia-plugin","text":"Original guide can be found here","title":"Generate cert using Loopia plugin"},{"location":"operator-manual/loopa-cert/#install-certbot-loopia-plugn","text":"sudo pip install certbot-dns-loopia","title":"Install certbot loopia plugn"},{"location":"operator-manual/loopa-cert/#setup-loopia-api-user-with-permissions","text":"addZoneRecord getZoneRecords removeSubdomain removeZoneRecord","title":"Setup Loopia API user with permissions"},{"location":"operator-manual/loopa-cert/#add-credentials-file","text":"dns_loopia_user = user@loopiaapi dns_loopia_password = passwordgoeshere","title":"Add credentials file"},{"location":"operator-manual/loopa-cert/#generate-cert","text":"sudo certbot certonly \\ --authenticator dns-loopia \\ --dns-loopia-propagation-seconds 90 \\ --dns-loopia-credentials credentials.ini \\ -d '*.agronod.com' \\ -d '*.apps.dev-ocp.agronod.com' \\ -d 'api.dev-ocp.agronod.com'","title":"Generate cert"},{"location":"operator-manual/loopa-cert/#upload-cert-to-loopia","text":"Find guide here","title":"Upload cert to Loopia"}]}